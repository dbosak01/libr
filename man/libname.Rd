% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/libname.R
\name{libname}
\alias{libname}
\title{Create a data library}
\usage{
libname(
  name,
  directory_path,
  type = NULL,
  read_only = FALSE,
  ...,
  env = parent.frame(),
  import_specs = NULL
)
}
\arguments{
\item{name}{The unquoted name of the library to create.  This name will 
be created as a variable in the global environment.}

\item{directory_path}{A directory path in which the data resides.  The 
incoming 
data can be in any file format: rds, csv, sas7bdat, etc.  The 
\code{libname} function will read any type of data into the library, 
and render as an R data frame.}

\item{type}{One or more file extensions to filter the incoming data.  The
default value is NULL, meaning all recognized data files will be input.
Valid values are "rds", "sas7bdat", "xls", "xlsx", "csv". 
When saved with \code{lib_write}, each file will be saved in its original
file format, unless otherwise specified on the \code{type} parameter of 
\code{lib_write}.}

\item{read_only}{Whether the library should be created as read only.
Default is FALSE.  If TRUE, the user will be restricted from
appending, removing, or writing data from the library to the file system.}

\item{...}{Follow-on parameters to the data import functions.  Which
parameters exist depend on which types of files are being imported.}

\item{env}{The environment to use for the libname if it is loaded. 
Default is parent.frame().}

\item{import_specs}{A collection of import specifications to be used for import.
The items on the list should be named according to the file names in 
the library directory. This parameter is available for files of type
'csv', 'xlsx', and 'xls'.  See the \code{\link{specs}} function for addtional
information.}
}
\value{
The library object.
}
\description{
A data library is a collection of data frames  A data 
library allows you to manage and store data frames as a unit.  The 
\code{libname} function defines the library.
}
\details{
A data library is an S3 object of class "lib".  The purpose of 
the library is to combine related data frames, and allow you to manipulate all
of them as a single object.  

The function uses the \code{\link[readr]{readr}}, \code{\link[readxl]{readxl}},
and \code{\link[haven:read_sas]{haven}} packages to import data.  
These packages have
sensible defaults, and most of the time your data will import in an
acceptable manner.  In some cases, however, you may want to control how
the data is imported.  For those cases, you can use to the
\code{...} parameter on the \code{libname} function to pass parameters to
the import functions.
}
\examples{
# Create temp directory
tmp <- tempdir()

# Save some data to temp directory
# for illustration purposes
saveRDS(trees, file.path(tmp, "trees.rds"))
saveRDS(rock, file.path(tmp, "rocks.rds"))
saveRDS(beaver1, file.path(tmp, "beaver1.rds"))

# Create data library
libname(dat, tmp)

# Print dictionary for library
dictionary(dat)

# Load library into workspace 
lib_load(dat)

# Print summaries for each data frame
summary(dat.rocks)
summary(dat.trees)
summary(dat.beaver1)

#Unload from workspace
lib_unload(dat)

# Clean up
lib_delete(dat)
}
\seealso{
Other lib: 
\code{\link{is.lib}()},
\code{\link{lib_add}()},
\code{\link{lib_copy}()},
\code{\link{lib_delete}()},
\code{\link{lib_info}()},
\code{\link{lib_load}()},
\code{\link{lib_path}()},
\code{\link{lib_remove}()},
\code{\link{lib_replace}()},
\code{\link{lib_size}()},
\code{\link{lib_unload}()},
\code{\link{lib_write}()},
\code{\link{print.lib}()}
}
\concept{lib}
